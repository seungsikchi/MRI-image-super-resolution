import numpy as np
import cv2, pydicom
import matplotlib.pyplot as plt
from vtk.util import numpy_support
from pydicom.pixel_data_handlers.util import apply_voi_lut
import vtk


window_center = -600
window_width = 1600
 
#DICOM 형식으로 저장된 XRAY사진 읽기 
dicom_path = '.\\dataset\\CT_1\\1_MOD\\10001.DCM'
slice = pydicom.read_file(dicom_path)

# Rescale Slope, Window Center와 같은 DICOM 속성을 적용해주지 않으면 contrast 및 brightness 차이가 발생하게 되니 조심해야한다.
s = 1 # int(slice.RescaleSlope) # 기울기 RescaleSlope는 대부분 1
b = -1024 # int(slice.RescaleIntercept) # y 절편 간혹 -1024로 설정되어있는 경우가 있다 그러면 안좋음
image = s * slice.pixel_array + b
 
plt.subplot(1,3,1)
plt.title('DICOM -> Array')
plt.imshow(image, cmap = 'gray')
 
# apply_voi_lut( ) 설정한 WC, WW에 맞춰 CT 영상에서 강조하는 과정
# apply_voi_lut() 함수가 WC와 WW를 맞춰주는 역할을 한다.
slice.WindowCenter = window_center
slice.WindowWidth = window_width
image2 = apply_voi_lut(image, slice)
plt.subplot(1,3,2)
plt.title('apply_voi_lut( )')
plt.imshow(image2, cmap = 'gray')
 
# normalization
image3 = np.clip(image, window_center - (window_width / 2), window_center + (window_width / 2))
plt.subplot(1,3,3)
plt.title('normalize')
plt.imshow(image3, cmap = 'gray')
plt.show()      

# #volume data
# #Source
# reader = vtk.vtkDICOMImageReader()
# reader.SetDirectoryName('./dataset/Canon')
# reader.Update()

# c_f, o_f = vtk.vtkColorTransferFunction(), vtk.vtkPiecewiseFunction()
# p = vtk.vtkVolumeProperty()
# m,v = vtk.vtkSmartVolumeMapper(), vtk.vtkVolume()

# opacityWindow = 4096
# opacityLevel = 2048

# #Mapper
# m.SetInputConnection(reader.GetOutputPort())
# m.SetBlendModeToMaximumIntensity()

# #preperty
# c_f.AddRGBSegment(0.0, 1.0, 1.0, 1.0, 225.0, 1.0, 1.0, 1.0)
# o_f.AddSegment(opacityLevel - 0.5*opacityWindow, 0.0,
#                 opacityLevel + 0.5*opacityWindow, 1.0)

# p.SetColor(c_f)
# p.SetScalarOpacity(o_f)

# #Actor
# v.SetMapper(m)
# v.SetProperty(p)

# #Renderer
# ren = vtk.vtkRenderer()
# renWin = vtk.vtkRenderWindow()
# renWin.AddRenderer(ren)
# iren = vtk.vtkRenderWindowInteractor()
# iren.SetRenderWindow(renWin)

# #Render Start
# ren.AddViewProp(v)
# renWin.Render()
# iren.Initialize()
# iren.Start()


##########################################################################################################

#Slice data
#Source
reader = vtk.vtkDICOMImageReader()
reader.SetDirectoryName('./dataset/Canon/CT_1/1_MOD')
reader.Update()

p = vtk.vtkVolumeProperty()
m, a = vtk.vtkImageResliceMapper(), vtk.vtkImageSlice()
plane = vtk.vtkPlane()

#data extnet
(xMin, xMax, yMin, yMax, zMin, zMax) = reader.GetExecutive().GetWholeExtent(reader.GetOutputInformation(0))
(xSpacing, ySpacing, zSpacing) = reader.GetOutput().GetSpacing()
(x0, y0, z0) = reader.GetOutput().GetOrigin()

#center of volume
center = [x0 + xSpacing * 0.5 * (xMin + xMax),
          y0 + ySpacing * 0.5 * (yMin + yMax),
          z0 + zSpacing * 0.5 * (zMin + zMax),]

#set cutting plane
plane.SetOrigin(center)
plane.SetNormal(0,0,1)
viewup = [0, -1, 0]
i, j, k = 0, 0, -zMax

#Mapper
m.SetInputConnection(reader.GetOutputPort())
m.SetSlicePlane(plane)

#Actor
a.SetMapper(m)

#Renderer
ren = vtk.vtkRenderer()
renWin = vtk.vtkRenderWindow()
renWin.AddRenderer(ren)
iren = vtk.vtkRenderWindowInteractor()
iren.SetRenderWindow(renWin)

#add action
ren.AddViewProp(a)

#Render Start
renWin.Render()
iren.Initialize()
iren.Start()
